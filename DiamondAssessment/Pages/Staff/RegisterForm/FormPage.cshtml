@page
@using Entities.Models.Enum
@model DiamondAssessment.Pages.FormPageModel
@{
    ViewData["Title"] = "Register Form Manager";
    var role = HttpContext.Session.GetString("Role");
    if (role is not "Staff") Response.Redirect("/Error");
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1>Register Form Manager</h1>
        <a class="btn btn-primary" asp-page="/Staff/RegisterForm/CreateForm">
            <i class="bi bi-plus-lg"></i> Create Form
        </a>
    </div>

    <form method="get">
        <div class="d-flex justify-content-between mb-3">
            <div>
                <label for="statusFilter" class="form-label">Filter by Status</label>
                <select id="statusFilter" class="form-select" asp-for="StatusFilter" onchange="this.form.submit()">
                    <option value="">All</option>
                    <option value="Approved">Approved</option>
                    <option value="Registered">Registered</option>
                </select>
            </div>
        </div>
    </form>

    <div class="table-responsive">
        <table class="table table-hover table-bordered">
            <thead class="table-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Forms[0].Name)</th>
                <th>@Html.DisplayNameFor(model => model.Forms[0].PhoneNumber)</th>
                <th>@Html.DisplayNameFor(model => model.Forms[0].Staff.Name)</th>
                <th>@Html.DisplayNameFor(model => model.Forms[0].Description)</th>
                <th class="text-center" colspan="3">Actions</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Forms)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.PhoneNumber)</td>
                    <td>@Html.DisplayFor(modelItem => item.Staff.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td class="text-center">
                        @if (item.RegisterFormStatus == RegisterFormStatus.Approved)
                        {
                            <div class="btn-group" role="group">
                            <a class="btn btn-sm btn-info" asp-page="/Staff/RegisterForm/DetailForm" asp-route-id="@item.Id.ToString()">
                                <i class="bi bi-pencil-square"></i> Detail
                            </a>
                            <a class="btn btn-sm btn-warning" asp-page="/Staff/RegisterForm/UpdateForm" asp-route-id="@item.Id.ToString()">
                                <i class="bi bi-pencil-square"></i> Update
                            </a>
                            <a class="btn btn-sm btn-danger" asp-page="/Staff/RegisterForm/DeleteForm" asp-route-id="@item.Id.ToString()">
                                <i class="bi bi-x-circle"></i> Delete
                            </a>
                            </div>
                        }
                        else if (item.RegisterFormStatus == RegisterFormStatus.Registered)
                        {
                            <div class="btn-group" role="group">
                                <a class="btn btn-sm btn-info" asp-page="/Staff/RegisterForm/DetailForm" asp-route-id="@item.Id.ToString()">
                                    <i class="bi bi-eye"></i> Detail
                                </a>
                                <a class="btn btn-sm btn-success" asp-page-handler="Approve" asp-route-id="@item.Id.ToString()">
                                    <i class="bi bi-check-circle"></i> Approve
                                </a>
                                <a class="btn btn-sm btn-danger" asp-page="/Staff/RegisterForm/DeleteForm" asp-route-id="@item.Id.ToString()">
                                    <i class="bi bi-x-circle"></i> Reject
                                </a>
                            </div>
                        }
                        else
                        {
                            <span>-</span>
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-between">
        <a asp-page="./FormPage" asp-route-PageNumber="@(Model.PageNumber - 1)" class="btn btn-outline-secondary"
           disabled="@(Model.PageNumber == 1)">
            Previous
        </a>
        <div>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <a asp-page="./FormPage" asp-route-PageNumber="@i" class="btn @(i == Model.PageNumber ? "btn-primary" : "btn-outline-secondary")">@i</a>
            }
        </div>
        <a asp-page="./FormPage" asp-route-PageNumber="@(Model.PageNumber + 1)" class="btn btn-outline-secondary"
           disabled="@(Model.PageNumber == Model.TotalPages)">
            Next
        </a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
