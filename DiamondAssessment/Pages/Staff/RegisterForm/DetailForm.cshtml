@page
@using Entities.Models.Enum
@model DiamondAssessment.Pages.DetailForm

@{
    Layout = "Shared/_Layout";
    var role = HttpContext.Session.GetString("Role");
    if (role is not "Staff") Response.Redirect("/Error");
}

<div class="container mt-4">
    <h1 class="mb-4">Form Details</h1>

    <div class="card mb-4">
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-3">Id</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Form.Id)</dd>

                <dt class="col-sm-3">Name</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Form.Name)</dd>

                <dt class="col-sm-3">Description</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Form.Description)</dd>

                <dt class="col-sm-3">Phone Number</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Form.PhoneNumber)</dd>

                <dt class="col-sm-3">Email</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Form.Email)</dd>

                <dt class="col-sm-3">Staff Name</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Form.Staff.Name)</dd>

                <dt class="col-sm-3">Status</dt>
                <dd class="col-sm-9"><span class="badge bg-primary">@Html.DisplayFor(model => model.Form.RegisterFormStatus)</span></dd>
            </dl>
        </div>
    </div>

    <h2 class="mb-4">Ticket List</h2>
    <a class="btn btn-primary mb-3" asp-page="/Staff/Ticket/Create" asp-route-formId="@Model.Form.Id.ToString()">
        <i class="bi bi-plus-lg"></i> Create Ticket
    </a>

    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Ticket Name</th>
                    <th scope="col">Status</th>
                    <th scope="col" class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Tickets)
                {
                    <tr>
                        <td>@item.TicketName</td>
                        <td>
                            @switch (item.TicketStatus)
                            {
                                case TicketStatus.Pending:
                                    <span class="badge bg-secondary">@item.TicketStatus</span>
                                    break;
                                case TicketStatus.InProgress:
                                    <span class="badge bg-warning">@item.TicketStatus</span>
                                    break;
                                case TicketStatus.Done:
                                    <span class="badge bg-primary">@item.TicketStatus</span>
                                    break;
                            }
                        </td>
                        <td class="text-center">
                            <a class="btn btn-info btn-sm" asp-page="../Ticket/Detail" asp-route-id="@item.Id">
                                <i class="bi bi-eye"></i> Detail
                            </a>
                            <a class="btn btn-warning btn-sm" asp-page="../Ticket/Update" asp-route-id="@item.Id.ToString()">
                                <i class="bi bi-pencil-square"></i> Edit
                            </a>
                            <a class="btn btn-danger btn-sm" asp-page="../Ticket/Delete" asp-route-id="@item.Id.ToString()">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
